version: "3.9"
services:
  engine:
    container_name: engine
    restart: always
    build: /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/engine
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/engine:/server
      - /server/node_modules
    env_file:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/engine/.env.generated
  graphql:
    container_name: graphql
    restart: always
    image: hasura/graphql-engine:v2.16.1
    ports:
      - 8080:8080
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/services/graphql:/hasura
    env_file:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/services/graphql/.env.generated
    healthcheck:
      test:
        - CMD-SHELL
        - timeout 1s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 5s
      timeout: 2s
      retries: 20
    depends_on:
      postgres:
        condition: service_healthy
  nginx:
    container_name: nginx
    restart: always
    build: /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/meta/router/nginx
    ports:
      - 10088:10088
      - 7001:7001
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/meta/router/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      graphql:
        condition: service_healthy
  storage:
    container_name: storage
    restart: always
    build: /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/services/storage
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/services/storage:/server
      - /server/node_modules
    env_file:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/services/storage/.env.generated
  todoweb:
    container_name: todoweb
    restart: unless-stopped
    build: /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/todo-web
    ports:
      - 3100:9000
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage:/gluestack
      - /gluestack/todo-web/node_modules/
      - /gluestack/todo-web/.next/
    env_file:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/todo-web/.env.generated
  minio:
    container_name: minio
    restart: always
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - 10310:9000
      - 9160:9001
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/storage/minio/data:/data
    environment:
      MINIO_ADMIN_END_POINT: host.docker.internal
      MINIO_CDN_END_POINT: 127.0.0.1
      MINIO_PORT: 10310
      MINIO_USE_SSL: false
      MINIO_ACCESS_KEY: gluestack
      MINIO_SECRET_KEY: password
      MINIO_PUBLIC_BUCKET: public
      MINIO_PRIVATE_BUCKET: private
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://minio:9000/minio/health/live
      interval: 5s
      timeout: 2s
      retries: 20
  createbucketsminio:
    container_name: createbucketsminio
    restart: always
    image: minio/mc
    entrypoint: sh
    command: -c "mc config host add myminio http://minio:9000 gluestack password &&
      if ! mc ls myminio/public ; then mc mb myminio/public && mc anonymous set
      public myminio/public; fi && if ! mc ls myminio/private ; then mc mb
      myminio/private; fi"
    depends_on:
      minio:
        condition: service_healthy
  postgres:
    container_name: postgres
    restart: always
    image: postgres:12
    ports:
      - 5432:5432
    volumes:
      - /Users/shivamsinghal/Sites/projects/gluestack/apps/tutorial-apps/todo-app-storage/backend/databases/postgres/db:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
      POSTGRES_DB: todo_db_storage
    healthcheck:
      test:
        - CMD-SHELL
        - psql -U postgres -d todo_db_storage
      interval: 10s
      timeout: 10s
      retries: 50
      start_period: 30s
